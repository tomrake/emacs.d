
#+TITLE: Org publish customizations

* org-publish
  This file is to be included when .emacs.d/settings.org is loaded.
#+BEGIN_SRC emacs-lisp
  (require 'ox-publish)
  ;; [TBD] Remove both these default-or-environment calls
  

  (default-or-environment publish-base-path "" "c:/Users/Public/org-web/" "ORG-PUBLIC-TARGET")

  (defun publish-source-path (path)
	     (concat local-config-src-base-path "source/" path))

	   (defun publish-path (path)
	     (concat local-config-publish-base-path path))

	   (defmacro src-publish-pair (path)
	     "Return a source and publish path pair."
	     (let ((_path (gensym)))
		`(let ((,_path ,path))
		  (list (publish-source-path  ,_path) (publish-path ,_path)))))


	   (defmacro publish-project (name srcdir webdir)
	     "Create  publication name generated from srcdir and browseable at webdir.
	      This publication has two components -notes and -static.
	      the -notes part is indexed."
	    (let ((name% (gensym))
		  (webdir% (gensym))
		  (srcdir% (gensym))
		  (notes-part% (gensym))
		  (static-part% (gensym)))
	    `(let* ((,name% ,name)
		   (,srcdir% ,srcdir)
		   (,webdir% ,webdir)
		   (,notes-part% (concat ,name% "-notes"))
		   (,static-part% (concat ,name% "-static")))
		   ;(message "name: %s" ,name%)
		   ;(message "notes-part %s" ,notes-part%)
		   ;(message "static-part %s" ,static-part%)
		   (list `(,,notes-part%
		    :base-directory ,,srcdir%
		    :base-extension "org"
		    :publishing-directory ,,webdir%
		    :recursive t
		    :exclude ".*/\.git/.*|.*/.*~"
		    :publishing-function org-html-publish-to-html
		    :headline-levels 4             ; Just the default for this project.
		    :auto-preamble t
		    :with-sub-superscript nil
		    :section-numbers nil
		    :auto-sitemap t
		    :makeindex t)
		   `(,,static-part%
		    :base-directory ,,srcdir%
		    :base-extension "css\\|js\\|png\\|jpg\\|gif\\|pdf\\|mp3\\|ogg\\|swf"
		    :publishing-directory ,,webdir%
		    :auto-sitemap nil
		    :recursive t
		    :exclude ".*/\.git/.*|.*/.*~"
		    :publishing-function org-publish-attachment)
		   `(,,name% :components (,,notes-part% ,,static-part%))))))

  (defun make-project (name)
      (publish-project name (publish-source-path name) (publish-path name)))


	   (setq org-publish-project-alist
		  `(
		   ("org-text"
		    :base-directory "~/Documents/Code/org-web/content"
		    :base-extension "org"
		    :publishing-directory "c:/Users/Public/org-web"
		    :recursive t
		    :exclude ".*/\.git/.*|.*/.*~"
		    :publishing-function org-html-publish-to-html
		    :headline-levels 4             ; Just the default for this project.
		    :auto-preamble t
		    :auto-sitemap t
		    :section-numbers nil
		    :makeindex t)
		   ("org-parts"
		    :base-directory "~/Documents/Code/org-web/content"
		    :base-extension "css\\|js\\|png\\|jpg\\|gif\\|pdf\\|mp3\\|ogg\\|swf"
		    :publishing-directory "c:/Users/Public/org-web"
		    :auto-sitemap nil
		    :recursive t
		    :exclude ".*/\.git/.*|.*/.*~"
		    :publishing-function org-publish-attachment)		      
		   ("emacs-config"
		    :base-directory "~/.emacs.d"
		    :base-extension "org"
		    :publishing-directory ,(publish-path "emacs-config")
		    :recursive nil
		    :publishing-function org-html-publish-to-html
		    :headline-levels 9             ; Just the default for this project.
		    :auto-sitemap t
		    :makeindex t
		    :section-numbers nil
		    :auto-preamble t)
		   ; Removed because of info: links in xelf
		   ;,@(publish-project "code-projects" "~/Documents/Code/quicklisp/local-projects"(publish-path "code-projects"))

		   ("org-web" :components ( "org-text" "org-parts"
					    ;"code-projects"
					    "emacs-config"))
		   ("blog-src"
		    ;; Path to org files.
		    :base-directory "~/Documents/Code/blog/org-source"
		    :base-extension "org"

		    ;; Path to Jekyll Posts
		    :publishing-directory "~/Documents/Code/blog/tomrake.github.io/_drafts/"
		    :recursive t
		    :publishing-function org-html-publish-to-html
		    :headline-levels 4
		    :html-extension "html"
		    :body-only t)
		   ("blog" :components ("blog-src"))))
#+END_SRC  

