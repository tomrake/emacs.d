* Tom's Emacs Startup Dashboard

| Code Stuff            | [[~/Documents/Code/source-projects/ACTIVE/]]           |                                                             |
| GTD                   | [[~/Documents/Code/org/gtd/gtd.org]]                   |                                                             |
| Jim's Stuff           | [[~/Documents/James-Seese/]]                           |                                                             |
| Tom's Stuff           | [[~/Documents/Thomas Rake/]]                           |                                                             |
| org-web               | [[~/Documents/Code/org-web/]]                          | [[file:///c:/Users/Public/org-web/theindex.html]]               |
| Emacs.org             | [[c:/Users/Public/Lispers/standard-emacs.d/Emacs.org]] | [[file:///c:/Users/Public/Lispers/standard-emacs.d/Emacs.html]] |
| emacs.d               | [[c:/Users/Public/Lispers/standard-emacs.d/]]          |                                                             |
| Common-Document-Store | [[~/Documents/Common-Document-Store/]]                 |                                                             |

* About Configuration and Emacs Configuration

- [[https://github.com/tomrake/dotfiles/tree/main]] contains dotfiles VC.
- Use config which is an alias for git.
- The local git repo is bare [[~/.cng/]]

** Chemacs2 is used
- [[~/.emacs.d]] is the chemacs2 clone
- [[~/.emacs-profiles.el]] list the chemacs profiles.

** There are MULTI-INIT profiles
- For this user the MULTI-INIT profiles are located at [[~/Documents/Code/Emacs-Configs/]]
- Under MULTI-INIT there are three main profiles production, testing and devel
- Under MUTLI-INIT init.el is build from Emacs.org inside emacs.d/ within the profile.
- MULTI-INIT dispatches to a file in emacs.d/scripts to configure init.el based on the current machine, user and profile.
*** This profile is production.

Execute following to verify  
#+begin_src emacs-lisp
(message chemacs-profile-name)
#+end_src

#+RESULTS:
: production

*** To customize this instance's lcoal config
  - The local configuration of init.el is by [[~/Documents/Code/Emacs-Configs/production/emacs.d/scripts/DESKER-zzzap-production-user-startup]]

Execute following to verify  
#+begin_src emacs-lisp
(message local-config-pathname)
#+end_src

#+RESULTS:
: ~/Documents/Code/Emacs-Configs/production/emacs.d/scripts/DESKER-zzzap-production-user-startup


* Astro
- T Coronae Borealis period nova

* FileCloud

[[https://ce.filecloud.com/][FileCloud community edition]] [[https://www.youtube.com/watch?v=xBIowQ0WaR8][Network Chuck Video]]

* File History Tools

[[c:/Users/zzzap/Documents/Code/source-projects/file-history-tools/]]

* Advent of Code
[[~/Documents/Code/source-projects/advent-of-code/2023/]]

* Last Notes
The slime/sly failure is likely miss compiled binaries by my new system.

* VLANs
- [[https://www.youtube.com/watch?v=9fLwFKGvmAY]]
- Consider vlan configurations. Level 2 tagging. Level 3 routing.
- Research switches and routers.
  
* Bug Tracking

I am going to try fossil as a bug tracking system.
Right now I do not have a handle on it. Check the  [[https://www2.fossil-scm.org/home/doc/trunk/www/index.wiki][Fossil Wiki]]

* SBCL Compile Project
[[~/Documents/Code/source-projects/ACTIVE/sbcl-compile]]
[[~/Documents/Code/source-projects/ACTIVE/sbcl-signature-check]]

** XML Parsing
The concept is to register various lisp compilers with emacs slime/sly by small configuration files.
[[https://www.emacswiki.org/emacs/XmlParsers]]

* shunit2
[[~/Documents/Code/source-projects/ACTIVE/shunit2]]

* System Configuration

| Main Emacs Shortcut | [[~/AppData/Roaming/Microsoft/Internet Explorer/Quick Launch/User Pinned/TaskBar/]] |
| Windows Start Menu  | [[c:/ProgramData/Microsoft/Windows/Start Menu/]]                                    |
|                     |                                                                                 |


* Interesting stuff.

| theorum specifcation and  prover                | [[https://github.com/SRI-CSL/PVS]]                                                                                 | [[https://www.youtube.com/watch?v=MHf07noO9KA][YouTube Video]] |
| Cross-platform  Persistance Lisp                | https://github.com/Shinmera/ubiquitous                                                                         |               |
| Pseudo Consoles on Windows                      | [[https://learn.microsoft.com/en-us/windows/console/creating-a-pseudoconsole-session]]                             |               |
| Introducing the Windows Pseudo Console (ConPTY) | [[https://devblogs.microsoft.com/commandline/windows-command-line-introducing-the-windows-pseudo-console-conpty/]] |               |
